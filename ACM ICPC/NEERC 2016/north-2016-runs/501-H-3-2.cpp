#include <bits/stdc++.h>

using namespace std;

#define TASK "hard"
#define forn(i, n) for (int i = 0; i < (n); ++i)
#define eprintf(...) fprintf(stderr, __VA_ARGS__)

const int N = 65;
const int inf = 1.01e9;


int mem[N * N];

int get(int w, int h)
{
    int v = w * N + h;
    if (mem[v] != -1) return mem[v];
    int &res = mem[v];
    res = inf;

    if (w == h)
    {
        res = 1;
        return res;
    }
    
    for (int x = 1; x <= w - 1; ++x)
    {
        res = min(res, get(x, h) + get(w - x, h));
    }
    for (int y = 1; y <= h - 1; ++y)
    {
        res = min(res, get(w, y) + get(w, h - y));
    }
    for (int x1 = 1; x1 <= w - 1; ++x1) for (int x2 = x1 + 1; x2 <= w - 1; ++x2)
    {
        for (int y1 = 1; y1 <= h - 1; ++y1) for (int y2 = y1 + 1; y2 <= h - 1; ++y2)
        {
            res = min(res, get(x2, y1) + get(w - x2, y2)  + get(w - x1, h - y2) + get(x1, h - y1) + get(x2 - x1, y2 - y1));
        }
    }
    return res;
}

tuple<int, int, int, int> res[N * N];
int resc = 0;


void solve(int stx, int sty, int w, int h)
{
    if (w == h)
    {
        res[resc++] = make_tuple(stx, sty, stx + w, sty + h);
        return;
    }

    int want = get(w, h);

    for (int x = 1; x <= w - 1; ++x)
    {
        if (want == get(x, h) + get(w - x, h))
        {
            solve(stx, sty, x, h);
            solve(stx + x, sty, w - x, h);
            return;
        }
    }

    for (int y = 1; y <= h - 1; ++y)
    {
        if (want == get(w, y) + get(w, h - y))
        {
            solve(stx, sty, w, y);
            solve(stx, sty + y, w, h - y);
            return;
        }
    }
    /*
        for (int x1 = 1; x1 <= w - 1; ++x1) for (int x2 = x1 + 1; x2 <= w - 1; ++x2)
    {
        for (int y1 = 1; y1 <= h - 1; ++y1) for (int y2 = y1 + 1; y2 <= h - 1; ++y2)
        {
            res = min(res, get(x2, y1) + get(w - x2, y2)  + get(w - x1, h - y2) + get(x1, h - y1) + get(x2 - x1, y2 - y1));
        }
    }
    */
    for (int x1 = 1; x1 <= w - 1; ++x1) for (int x2 = x1 + 1; x2 <= w - 1; ++x2)
    {
        for (int y1 = 1; y1 <= h - 1; ++y1) for (int y2 = y1 + 1; y2 <= h - 1; ++y2)
        {
            int val = get(x2, y1) + get(w - x2, y2)  + get(w - x1, h - y2) + get(x1, h - y1) + get(x2 - x1, y2 - y1);
            if (want == val)
            {
                solve(stx, sty, x2, y1);
                solve(stx + x2, sty, w - x2, y2);
                solve(stx + x1, sty + y2, w - x1, h - y2);
                solve(stx, sty + y1, x1, h - y1);
                solve(stx + x1, sty + y1, x2 - x1, y2 - y1);
                return;
            }
        }
    }

    assert(false);
}


int main() {
    freopen(TASK".in", "r", stdin);
    freopen(TASK".out", "w", stdout);
    
    memset(mem, -1, sizeof mem);
    int tn;
    scanf("%d", &tn);
    forn(tt, tn)
    {
        int w, h;
        scanf("%d%d", &w, &h);


string ans = "";
if (w == 17 && h == 16){ans="8\n0 0 10\n0 10 6\n6 10 6\n10 0 7\n10 7 3\n12 10 1\n12 11 5\n13 7 4\n";
}
if (w == 16 && h == 17){ans="8\n0 0 10\n10 0 6\n10 6 6\n0 10 7\n7 10 3\n10 12 1\n11 12 5\n7 13 4\n";
}if (w == 27 && h == 25){ans="10\n0 0 14\n0 14 11\n11 14 3\n11 17 3\n11 20 5\n14 0 13\n14 13 7\n16 20 5\n21 13 6\n21 19 6\n";
}
if (w == 25 && h == 27){ans="10\n0 0 14\n14 0 11\n14 11 3\n17 11 3\n20 11 5\n0 14 13\n13 14 7\n20 16 5\n13 21 6\n19 21 6\n";
}if (w == 29 && h == 25){ans="10\n0 0 15\n0 15 10\n10 15 2\n10 17 8\n12 15 2\n14 15 1\n14 16 1\n15 0 14\n15 14 3\n18 14 11\n";
}
if (w == 25 && h == 29){ans="10\n0 0 15\n15 0 10\n15 10 2\n17 10 8\n15 12 2\n15 14 1\n16 14 1\n0 15 14\n14 15 3\n14 18 11\n";
}if (w == 31 && h == 27){ans="10\n0 0 16\n0 16 11\n11 16 3\n11 19 8\n14 16 3\n16 0 15\n16 15 1\n17 15 2\n17 17 2\n19 15 12\n";
}
if (w == 27 && h == 31){ans="10\n0 0 16\n16 0 11\n16 11 3\n19 11 8\n16 14 3\n0 16 15\n15 16 1\n15 17 2\n17 17 2\n15 19 12\n";
}if (w == 33 && h == 16){ans="9\n0 0 10\n0 10 6\n6 10 6\n10 0 7\n10 7 3\n12 10 1\n12 11 5\n13 7 4\n17 0 16\n";
}
if (w == 16 && h == 33){ans="9\n0 0 10\n10 0 6\n10 6 6\n0 10 7\n7 10 3\n10 12 1\n11 12 5\n7 13 4\n0 17 16\n";
}if (w == 33 && h == 17){ans="9\n0 0 10\n0 10 7\n7 10 3\n7 13 4\n10 0 6\n10 6 6\n10 12 1\n11 12 5\n16 0 17\n";
}
if (w == 17 && h == 33){ans="9\n0 0 10\n10 0 7\n10 7 3\n13 7 4\n0 10 6\n6 10 6\n12 10 1\n12 11 5\n0 16 17\n";
}if (w == 34 && h == 32){ans="8\n0 0 20\n0 20 12\n12 20 12\n20 0 14\n20 14 6\n24 20 2\n24 22 10\n26 14 8\n";
}
if (w == 32 && h == 34){ans="8\n0 0 20\n20 0 12\n20 12 12\n0 20 14\n14 20 6\n20 24 2\n22 24 10\n14 26 8\n";
}if (w == 35 && h == 31){ans="8\n0 0 18\n0 18 13\n13 18 5\n13 23 8\n18 0 17\n18 17 3\n18 20 3\n21 17 14\n";
}
if (w == 31 && h == 35){ans="8\n0 0 18\n18 0 13\n18 13 5\n23 13 8\n0 18 17\n17 18 3\n20 18 3\n17 21 14\n";
}if (w == 35 && h == 34){ans="8\n0 0 19\n0 19 15\n15 19 4\n15 23 11\n19 0 16\n19 16 7\n26 16 9\n26 25 9\n";
}
if (w == 34 && h == 35){ans="8\n0 0 19\n19 0 15\n19 15 4\n23 15 11\n0 19 16\n16 19 7\n16 26 9\n25 26 9\n";
}if (w == 36 && h == 31){ans="10\n0 0 19\n0 19 12\n12 19 7\n12 26 5\n17 26 5\n19 0 17\n19 17 3\n19 20 3\n19 23 3\n22 17 14\n";
}
if (w == 31 && h == 36){ans="10\n0 0 19\n19 0 12\n19 12 7\n26 12 5\n26 17 5\n0 19 17\n17 19 3\n20 19 3\n23 19 3\n17 22 14\n";
}if (w == 37 && h == 29){ans="8\n0 0 20\n0 20 9\n9 20 9\n18 20 2\n18 22 7\n20 0 17\n20 17 5\n25 17 12\n";
}
if (w == 29 && h == 37){ans="8\n0 0 20\n20 0 9\n20 9 9\n20 18 2\n22 18 7\n0 20 17\n17 20 5\n17 25 12\n";
}if (w == 37 && h == 32){ans="8\n0 0 19\n0 19 13\n13 19 3\n13 22 10\n16 19 3\n19 0 18\n19 18 4\n23 18 14\n";
}
if (w == 32 && h == 37){ans="8\n0 0 19\n19 0 13\n19 13 3\n22 13 10\n19 16 3\n0 19 18\n18 19 4\n18 23 14\n";
}if (w == 40 && h == 29){ans="8\n0 0 17\n0 17 12\n12 17 12\n17 0 10\n17 10 7\n24 10 3\n24 13 16\n27 0 13\n";
}
if (w == 29 && h == 40){ans="8\n0 0 17\n17 0 12\n17 12 12\n0 17 10\n10 17 7\n10 24 3\n13 24 16\n0 27 13\n";
}if (w == 49 && h == 16){ans="10\n0 0 16\n16 0 16\n32 0 10\n32 10 6\n38 10 6\n42 0 7\n42 7 3\n44 10 1\n44 11 5\n45 7 4\n";
}
if (w == 16 && h == 49){ans="10\n0 0 16\n0 16 16\n0 32 10\n10 32 6\n10 38 6\n0 42 7\n7 42 3\n10 44 1\n11 44 5\n7 45 4\n";
}if (w == 49 && h == 46){ans="9\n0 0 29\n0 29 17\n17 29 17\n29 0 20\n29 20 9\n34 29 2\n34 31 15\n36 29 2\n38 20 11\n";
}
if (w == 46 && h == 49){ans="9\n0 0 29\n29 0 17\n29 17 17\n0 29 20\n20 29 9\n29 34 2\n31 34 15\n29 36 2\n20 38 11\n";
}if (w == 49 && h == 48){ans="9\n0 0 30\n0 30 18\n18 30 18\n30 0 19\n30 19 11\n36 30 5\n36 35 13\n41 19 8\n41 27 8\n";
}
if (w == 48 && h == 49){ans="9\n0 0 30\n30 0 18\n30 18 18\n0 30 19\n19 30 11\n30 36 5\n35 36 13\n19 41 8\n27 41 8\n";
}if (w == 50 && h == 17){ans="10\n0 0 17\n17 0 17\n34 0 10\n34 10 7\n41 10 3\n41 13 4\n44 0 6\n44 6 6\n44 12 1\n45 12 5\n";
}
if (w == 17 && h == 50){ans="10\n0 0 17\n0 17 17\n0 34 10\n10 34 7\n10 41 3\n13 41 4\n0 44 6\n6 44 6\n12 44 1\n12 45 5\n";
}if (w == 50 && h == 43){ans="9\n0 0 26\n0 26 17\n17 26 3\n17 29 14\n20 26 3\n23 26 3\n26 0 24\n26 24 5\n31 24 19\n";
}
if (w == 43 && h == 50){ans="9\n0 0 26\n26 0 17\n26 17 3\n29 17 14\n26 20 3\n26 23 3\n0 26 24\n24 26 5\n24 31 19\n";
}if (w == 50 && h == 47){ans="9\n0 0 33\n0 33 14\n14 33 14\n28 33 5\n28 38 9\n33 0 17\n33 17 17\n33 34 4\n37 34 13\n";
}
if (w == 47 && h == 50){ans="9\n0 0 33\n33 0 14\n33 14 14\n33 28 5\n38 28 9\n0 33 17\n17 33 17\n34 33 4\n34 37 13\n";
}if (w == 51 && h == 48){ans="8\n0 0 30\n0 30 18\n18 30 18\n30 0 21\n30 21 9\n36 30 3\n36 33 15\n39 21 12\n";
}
if (w == 48 && h == 51){ans="8\n0 0 30\n30 0 18\n30 18 18\n0 30 21\n21 30 9\n30 36 3\n33 36 15\n21 39 12\n";
}if (w == 53 && h == 50){ans="9\n0 0 31\n0 31 19\n19 31 19\n31 0 22\n31 22 9\n38 31 2\n38 33 2\n38 35 15\n40 22 13\n";
}
if (w == 50 && h == 53){ans="9\n0 0 31\n31 0 19\n31 19 19\n0 31 22\n22 31 9\n31 38 2\n33 38 2\n35 38 15\n22 40 13\n";
}if (w == 54 && h == 25){ans="11\n0 0 15\n0 15 10\n10 15 2\n10 17 8\n12 15 2\n14 15 1\n14 16 1\n15 0 14\n15 14 3\n18 14 11\n29 0 25\n";
}
if (w == 25 && h == 54){ans="11\n0 0 15\n15 0 10\n15 10 2\n17 10 8\n15 12 2\n15 14 1\n16 14 1\n0 15 14\n14 15 3\n14 18 11\n0 29 25\n";
}if (w == 54 && h == 41){ans="9\n0 0 29\n0 29 12\n12 29 12\n24 29 5\n24 34 7\n29 0 25\n29 25 9\n31 34 7\n38 25 16\n";
}
if (w == 41 && h == 54){ans="9\n0 0 29\n29 0 12\n29 12 12\n29 24 5\n34 24 7\n0 29 25\n25 29 9\n34 31 7\n25 38 16\n";
}if (w == 54 && h == 43){ans="9\n0 0 30\n0 30 13\n13 30 13\n26 30 4\n26 34 9\n30 0 24\n30 24 5\n30 29 5\n35 24 19\n";
}
if (w == 43 && h == 54){ans="9\n0 0 30\n30 0 13\n30 13 13\n30 26 4\n34 26 9\n0 30 24\n24 30 5\n29 30 5\n24 35 19\n";
}if (w == 54 && h == 49){ans="9\n0 0 29\n0 29 20\n20 29 9\n20 38 11\n29 0 25\n29 25 13\n31 38 11\n42 25 12\n42 37 12\n";
}
if (w == 49 && h == 54){ans="9\n0 0 29\n29 0 20\n29 20 9\n38 20 11\n0 29 25\n25 29 13\n38 31 11\n25 42 12\n37 42 12\n";
}if (w == 54 && h == 50){ans="10\n0 0 28\n0 28 22\n22 28 6\n22 34 6\n22 40 10\n28 0 26\n28 26 14\n32 40 10\n42 26 12\n42 38 12\n";
}
if (w == 50 && h == 54){ans="10\n0 0 28\n28 0 22\n28 22 6\n34 22 6\n40 22 10\n0 28 26\n26 28 14\n40 32 10\n26 42 12\n38 42 12\n";
}if (w == 55 && h == 43){ans="9\n0 0 30\n0 30 13\n13 30 13\n26 30 2\n26 32 11\n28 30 2\n30 0 25\n30 25 7\n37 25 18\n";
}
if (w == 43 && h == 55){ans="9\n0 0 30\n30 0 13\n30 13 13\n30 26 2\n32 26 11\n30 28 2\n0 30 25\n25 30 7\n25 37 18\n";
}if (w == 55 && h == 46){ans="9\n0 0 27\n0 27 19\n19 27 19\n27 0 14\n27 14 13\n38 27 2\n38 29 17\n40 14 15\n41 0 14\n";
}
if (w == 46 && h == 55){ans="9\n0 0 27\n27 0 19\n27 19 19\n0 27 14\n14 27 13\n27 38 2\n29 38 17\n14 40 15\n0 41 14\n";
}if (w == 55 && h == 47){ans="9\n0 0 32\n0 32 15\n15 32 15\n30 32 2\n30 34 13\n32 0 23\n32 23 11\n43 23 12\n43 35 12\n";
}
if (w == 47 && h == 55){ans="9\n0 0 32\n32 0 15\n32 15 15\n32 30 2\n34 30 13\n0 32 23\n23 32 11\n23 43 12\n35 43 12\n";
}if (w == 55 && h == 48){ans="9\n0 0 29\n0 29 19\n19 29 5\n19 34 14\n24 29 5\n29 0 26\n29 26 4\n29 30 4\n33 26 22\n";
}
if (w == 48 && h == 55){ans="9\n0 0 29\n29 0 19\n29 19 5\n34 19 14\n29 24 5\n0 29 26\n26 29 4\n30 29 4\n26 33 22\n";
}if (w == 56 && h == 47){ans="9\n0 0 27\n0 27 20\n20 27 20\n27 0 14\n27 14 13\n40 14 1\n40 15 16\n40 31 16\n41 0 15\n";
}
if (w == 47 && h == 56){ans="9\n0 0 27\n27 0 20\n27 20 20\n0 27 14\n14 27 13\n14 40 1\n15 40 16\n31 40 16\n0 41 15\n";
}if (w == 56 && h == 53){ans="9\n0 0 29\n0 29 24\n24 29 5\n24 34 19\n29 0 27\n29 27 7\n36 27 7\n43 27 13\n43 40 13\n";
}
if (w == 53 && h == 56){ans="9\n0 0 29\n29 0 24\n29 24 5\n34 24 19\n0 29 27\n27 29 7\n27 36 7\n27 43 13\n40 43 13\n";
}if (w == 56 && h == 55){ans="9\n0 0 32\n0 32 23\n23 32 9\n23 41 14\n32 0 24\n32 24 12\n32 36 5\n37 36 19\n44 24 12\n";
}
if (w == 55 && h == 56){ans="9\n0 0 32\n32 0 23\n32 23 9\n41 23 14\n0 32 24\n24 32 12\n36 32 5\n36 37 19\n24 44 12\n";
}if (w == 57 && h == 44){ans="9\n0 0 30\n0 30 14\n14 30 14\n28 30 2\n28 32 12\n30 0 27\n30 27 5\n35 27 5\n40 27 17\n";
}
if (w == 44 && h == 57){ans="9\n0 0 30\n30 0 14\n30 14 14\n30 28 2\n32 28 12\n0 30 27\n27 30 5\n27 35 5\n27 40 17\n";
}if (w == 57 && h == 46){ans="9\n0 0 31\n0 31 15\n15 31 15\n30 31 1\n30 32 7\n30 39 7\n31 0 26\n31 26 6\n37 26 20\n";
}
if (w == 46 && h == 57){ans="9\n0 0 31\n31 0 15\n31 15 15\n31 30 1\n32 30 7\n39 30 7\n0 31 26\n26 31 6\n26 37 20\n";
}if (w == 57 && h == 52){ans="9\n0 0 29\n0 29 23\n23 29 3\n23 32 10\n23 42 10\n26 29 3\n29 0 28\n29 28 4\n33 28 24\n";
}
if (w == 52 && h == 57){ans="9\n0 0 29\n29 0 23\n29 23 3\n32 23 10\n42 23 10\n29 26 3\n0 29 28\n28 29 4\n28 33 24\n";
}if (w == 58 && h == 27){ans="11\n0 0 16\n0 16 11\n11 16 3\n11 19 8\n14 16 3\n16 0 15\n16 15 1\n17 15 2\n17 17 2\n19 15 12\n31 0 27\n";
}
if (w == 27 && h == 58){ans="11\n0 0 16\n16 0 11\n16 11 3\n19 11 8\n16 14 3\n0 16 15\n15 16 1\n15 17 2\n17 17 2\n15 19 12\n0 31 27\n";
}if (w == 58 && h == 50){ans="10\n0 0 30\n0 30 20\n20 30 4\n20 34 16\n24 30 4\n28 30 2\n28 32 2\n30 0 28\n30 28 6\n36 28 22\n";
}
if (w == 50 && h == 58){ans="10\n0 0 30\n30 0 20\n30 20 4\n34 20 16\n30 24 4\n30 28 2\n32 28 2\n0 30 28\n28 30 6\n28 36 22\n";
}if (w == 59 && h == 43){ans="9\n0 0 25\n0 25 18\n18 25 18\n25 0 14\n25 14 11\n36 14 3\n36 17 3\n36 20 23\n39 0 20\n";
}
if (w == 43 && h == 59){ans="9\n0 0 25\n25 0 18\n25 18 18\n0 25 14\n14 25 11\n14 36 3\n17 36 3\n20 36 23\n0 39 20\n";
}if (w == 59 && h == 44){ans="9\n0 0 27\n0 27 17\n17 27 17\n27 0 13\n27 13 7\n27 20 7\n34 13 6\n34 19 25\n40 0 19\n";
}
if (w == 44 && h == 59){ans="9\n0 0 27\n27 0 17\n27 17 17\n0 27 13\n13 27 7\n20 27 7\n13 34 6\n19 34 25\n0 40 19\n";
}if (w == 59 && h == 46){ans="9\n0 0 31\n0 31 15\n15 31 15\n30 31 4\n30 35 11\n31 0 28\n31 28 3\n34 28 7\n41 28 18\n";
}
if (w == 46 && h == 59){ans="9\n0 0 31\n31 0 15\n31 15 15\n31 30 4\n35 30 11\n0 31 28\n28 31 3\n28 34 7\n28 41 18\n";
}if (w == 59 && h == 47){ans="9\n0 0 28\n0 28 19\n19 28 19\n28 0 18\n28 18 10\n38 18 8\n38 26 21\n46 0 13\n46 13 13\n";
}
if (w == 47 && h == 59){ans="9\n0 0 28\n28 0 19\n28 19 19\n0 28 18\n18 28 10\n18 38 8\n26 38 21\n0 46 13\n13 46 13\n";
}if (w == 59 && h == 50){ans="9\n0 0 27\n0 27 23\n23 27 4\n23 31 19\n27 0 16\n27 16 15\n42 16 17\n42 33 17\n43 0 16\n";
}
if (w == 50 && h == 59){ans="9\n0 0 27\n27 0 23\n27 23 4\n31 23 19\n0 27 16\n16 27 15\n16 42 17\n33 42 17\n0 43 16\n";
}if (w == 59 && h == 51){ans="9\n0 0 30\n0 30 21\n21 30 5\n21 35 16\n26 30 5\n30 0 29\n30 29 1\n31 29 6\n37 29 22\n";
}
if (w == 51 && h == 59){ans="9\n0 0 30\n30 0 21\n30 21 5\n35 21 16\n30 26 5\n0 30 29\n29 30 1\n29 31 6\n29 37 22\n";
}if (w == 59 && h == 52){ans="9\n0 0 30\n0 30 22\n22 30 8\n22 38 14\n30 0 29\n30 29 6\n30 35 3\n33 35 3\n36 29 23\n";
}
if (w == 52 && h == 59){ans="9\n0 0 30\n30 0 22\n30 22 8\n38 22 14\n0 30 29\n29 30 6\n35 30 3\n35 33 3\n29 36 23\n";
}if (w == 59 && h == 55){ans="9\n0 0 31\n0 31 24\n24 31 7\n24 38 17\n31 0 28\n31 28 10\n41 28 18\n41 46 9\n50 46 9\n";
}
if (w == 55 && h == 59){ans="9\n0 0 31\n31 0 24\n31 24 7\n38 24 17\n0 31 28\n28 31 10\n28 41 18\n46 41 9\n46 50 9\n";
}if (w == 59 && h == 56){ans="9\n0 0 36\n0 36 20\n20 36 20\n36 0 23\n36 23 9\n36 32 4\n40 32 5\n40 37 19\n45 23 14\n";
}
if (w == 56 && h == 59){ans="9\n0 0 36\n36 0 20\n36 20 20\n0 36 23\n23 36 9\n32 36 4\n32 40 5\n37 40 19\n23 45 14\n";
}if (w == 60 && h == 41){ans="9\n0 0 24\n0 24 17\n17 24 7\n17 31 10\n24 0 18\n24 18 13\n27 31 10\n37 18 23\n42 0 18\n";
}
if (w == 41 && h == 60){ans="9\n0 0 24\n24 0 17\n24 17 7\n31 17 10\n0 24 18\n18 24 13\n31 27 10\n18 37 23\n0 42 18\n";
}
          if (ans != "")
          {
            cout << ans << endl;
            continue;
        }
        //eprintf("get = %d\n", get(w, h));
        resc = 0;
        solve(0, 0, w, h);
        printf("%d\n", resc);
        forn(i, resc)
        {
            int x1, y1, x2, y2;
            tie(x1, y1, x2, y2) = res[i];
            assert(x2 - x1 == y2 - y1);
            printf("%d %d %d\n", x1, y1, x2 - x1);
        }
    }


    return 0;
}
